# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

git_config: &git_config
  name: configure git bot
  command: |
      git config user.name "$GITHUB_BOT_USERNAME"
      git config user.email "$GITHUB_BOT_EMAIL"

executors:
  build-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/code

jobs:
  dependencies:
    executor: build-executor
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
  build:
    executor: build-executor
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Build
          command: ./gradlew build
      - run:
          name: Report build failure
          when: on_fail
          command: |
            curl --header "Content-Type: application/json" --request POST \
             --data '{"text":"❌ java-api-schema build failed: '${CIRCLE_BUILD_URL}'"}' \
              $DIALOG_HOOK_URL
  release:
    executor: build-executor
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          <<: *git_config
      - restore_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Change origin to push by bot
          command: |
            git remote set-url origin https://${GITHUB_BOT_TOKEN}@github.com/dialogs/api-schema.git
      - run:
          name: Release
          command: echo -ne '\n\n' | ./gradlew release
      - run:
          name: Report build failure
          when: on_fail
          command: |
            curl --header "Content-Type: application/json" --request POST \
             --data '{"text":"❌ java-api-schema release failed: '${CIRCLE_BUILD_URL}'"}' \
              $DIALOG_HOOK_URL
      - run:
          name: Report success
          command: |
            curl --header "Content-Type: application/json" --request POST \
             --data '{"text":"java-api-schema release successful! Check it here: '${ARTIFACT_URL}' "}' \
              $DIALOG_HOOK_URL
  python_release:
    docker:
        - image: circleci/python:3.7
    steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Install envsubst
            command: |
                sudo apt-get update && sudo apt-get -y install gettext-base
        - run:
            name: init .pypirc
            command: |
                echo -e "[pypi]" >> ~/.pypirc
                echo -e "username: dialog_llc" >> ~/.pypirc
                echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc
        - run:
            name: Change setup.py
            command: |
                envsubst < ./python3/setup_unfilled.py > ./python3/setup.py
        - run:
            name: Install twine
            command: |
                python3 -m pip install twine

        - run:
            name: Build & push package
            command: |
                cd python3
                python3 setup.py sdist bdist_wheel
                python3 -m twine upload ./dist/*
workflows:
  version: 2
  java-build-release:
    jobs:
      - dependencies
      - build:
          requires:
            - dependencies
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
      - python_release:
          filters:
            branches:
              only: master
